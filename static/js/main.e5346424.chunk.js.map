{"version":3,"sources":["components/PhonebookForm/PhonebookForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["PhonebookForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","resetFormField","this","type","onChange","pattern","title","required","Component","Filter","filter","ContactList","list","onDelete","map","id","onClick","defaultProps","contactList","App","contacts","addContact","newContact","contact","uuidv4","find","alert","deleteContact","removableContactId","changeFilter","filterContacts","normalizedContactSnippet","toLowerCase","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA6DeA,E,4MA1DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOL,KAAOG,EAAEE,OAAOC,S,EAI9BC,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,kB,oDAGP,WACEC,KAAKR,SAAS,CACZJ,KAAM,GACNC,OAAQ,O,oBAIZ,WACE,OACI,uBAAMS,SAAUE,KAAKL,aAArB,UACE,yCAEE,uBACEM,KAAK,OACLb,KAAK,OACLM,MAAOM,KAAKb,MAAMC,KAClBc,SAAUF,KAAKV,aACfa,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,2CAEE,uBACEJ,KAAK,MACLb,KAAK,SACLM,MAAOM,KAAKb,MAAME,OAClBa,SAAUF,KAAKV,aACfa,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQJ,KAAK,SAAb,gC,GArDkBK,aCWbC,EAXA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQN,EAAX,EAAWA,SAAX,OACb,0DAEE,uBACAD,KAAK,OACLP,MAAOc,EACPN,SAAUA,QCLRO,E,4MAKJtB,MAAQ,CACNqB,OAAQ,I,4CAKV,WACE,MAA0BR,KAAKH,MAAvBa,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SAEd,OAAY,6BACTD,EAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACR,+BACE,iCACGD,EADH,KACWC,KAEX,wBACAY,KAAK,SACLa,QAAS,kBAAKH,EAASE,IAFvB,uBAJOA,Y,GAhBSP,aAApBG,EACGM,aAAe,CACpBC,YAAa,IA6BFP,QCsCAQ,E,4MAhEb9B,MAAQ,CACN+B,SAAU,GACVV,OAAQ,I,EAGVW,WAAa,SAAAC,GACX,IAAOF,EAAY,EAAK/B,MAAjB+B,SACDG,EAAU,CACdR,GAAIS,cACJlC,KAAMgC,EAAWhC,KACjBC,OAAQ+B,EAAW/B,QAGrB6B,EAASK,MAAK,qBAAEnC,OAAmBgC,EAAWhC,QAC1CoC,MAAM,8BACN,EAAKhC,UAAS,gBAAG0B,EAAH,EAAGA,SAAH,MAAmB,CACjCA,SAAS,CAAEG,GAAH,mBAAeH,S,EAI7BO,cAAgB,SAAAC,GACd,EAAKlC,UAAS,kBAAiB,CAC7B0B,SADY,EAAEA,SACKV,QAAO,SAAAa,GAAO,OAC/BA,EAAQR,KAAOa,U,EAIrBC,aAAe,SAAApC,GACb,EAAKC,SAAS,CAAEgB,OAAQjB,EAAEE,OAAOC,QACjC,EAAKkC,kB,EAGPA,eAAiB,WACf,MAA6B,EAAKzC,MAA1B+B,EAAR,EAAQA,SACFW,EADN,EAAkBrB,OACsBsB,cACxC,OAAOZ,EAASV,QAAO,qBAAGpB,KACjB0C,cAAcC,SAASF,O,4CAIlC,WACE,IAAOrB,EAAUR,KAAKb,MAAfqB,OACDwB,EAAmBhC,KAAK4B,iBAE9B,OACE,qCACE,2CACA,cAAC,EAAD,CAAe9B,SAAUE,KAAKmB,aAE9B,0CACA,cAAC,EAAD,CACAzB,MAAOc,EACPN,SAAUF,KAAK2B,eAEf,cAAC,EAAD,CACAjB,KAAMsB,EACNrB,SAAUX,KAAKyB,uB,GAzDLnB,aCHlB2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e5346424.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass PhonebookForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.resetFormField();\n  };\n\n  resetFormField() {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  }\n\n  render() {\n    return (\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </form>\n    );\n  }\n}\n\nexport default PhonebookForm;\n","import React from 'react';\n\nconst Filter = ({ filter, onChange }) => (\n  <label>\n    Find contacts by name\n    <input \n    type=\"text\" \n    value={filter} \n    onChange={onChange} \n    />\n  </label>\n);\n\nexport default Filter;\n","import { Component } from 'react';\n// import ContactListMarkup from '../ContactListMarkup';\n\nclass ContactList extends Component {\n  static defaultProps = {\n    contactList: [],\n  };\n\n  state = {\n    filter: '',\n  };\n\n\n\n  render() {\n    const { list, onDelete} = this.props;\n\n    return (    <ul>\n      {list.map(({ id, name, number }) => (\n        <li key={id}>\n          <span>\n            {name}: {number}\n          </span>\n          <button \n          type=\"button\"\n          onClick={()=> onDelete(id)}\n          > Delete\n          </button>\n        </li>\n      ))}\n    </ul>)\n  }\n}\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport PhonebookForm from './components/PhonebookForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: ''\n  };\n\n  addContact = newContact => {\n    const {contacts} = this.state;\n    const contact = {\n      id: uuidv4(),\n      name: newContact.name,\n      number: newContact.number\n    };\n\n    contacts.find(({name}) => name === newContact.name)\n      ? alert('This contact already exist')\n      : this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n  };\n\n  deleteContact = removableContactId => {\n    this.setState(({contacts}) => ({\n      contacts: contacts.filter(contact => \n        contact.id !== removableContactId)\n    }));\n  }\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n    this.filterContacts();\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedContactSnippet = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedContactSnippet),\n      )\n  };\n\n  render() {\n    const {filter} = this.state;\n    const filteredContacts = this.filterContacts();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <PhonebookForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter \n        value={filter} \n        onChange={this.changeFilter} \n        />\n        <ContactList \n        list={filteredContacts} \n        onDelete={this.deleteContact}\n        />\n        \n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}